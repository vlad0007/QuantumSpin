//rotate.js
var PI = Math.PI;
var DEGREE = 0.01745329251994; // –≤–µ–ª–∏—á–∏–Ω–∞ —É–≥–ª–æ–≤–æ–≥–æ –≥—Ä–∞–¥—É—Å–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö

var xC, yC, SCALE;

var elem; // —Å—Å—ã–ª–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç canvas_draw
var ctx; // –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ

var gui;
var controller;

var teta = 0;

// SCALE –∑–∞–¥–∞–µ—Ç –ò–°–•–û–î–ù–´–ô –º–∞—Å—à—Ç–∞–± –ø—Ä–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ü–∏–∏ –º–æ–¥–µ–ª–∏ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç—å OXY,
// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–æ–¥–µ–ª–∏ –≤ WebGeometry –ø–æ X –∏ Y
// –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç -3.0 –¥–æ + 3.0, –∞ —Ö–æ–ª—Å—Ç –∏–º–µ–µ—Ç —Ä–∞–∑–º–µ—Ä—ã 770 x 400.
// –î–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —ç—Ç–∏—Ö –¥–≤—É—Ö —Å–∏—Å—Ç–µ–º–∞—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç 
// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è SCALE. 
SCALE = 1;
// xC –∏ yC –∑–∞–¥–∞—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –Ω–∞ –Ω–∞ —Ö–æ–ª—Å—Ç–µ –≤ –ø–∏–∫—Å–µ–ª–∞—Ö 
// –∏–º–µ—é—â—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (0, 0) –≤ —Å–∏—Å—Ç–µ–º–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç WebGeometry
/*
xC = 23; // 23 –ø–∏–∫—Å–µ–ª–∞ –≤–ø—Ä–∞–≤–æ –ø–æ —Ö–æ–ª—Å—Ç—É
yC = 400 - 15;	// 400 - 15  - –ø–∏–∫—Å–µ–ª–æ–≤ –≤–Ω–∏–∑ –ø–æ —Ö–æ–ª—Å—Ç—É 
				// 400 - —Ä–∞–∑–º–µ—Ä —Ö–æ–ª—Å—Ç–∞ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤ –ø–∏–∫—Å–µ–ª–∞—Ö
*/
xC = 2;
yC = 400 - 2;

var x_coord = -1000; //   –ó–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö WebGeometry) 
var y_coord = -1000; //     –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏ –Ω–∞ —Ö–æ–ª—Å—Ç–µ.

// Mouse
var mouseDown = false;
var lastMouseX = null;
var lastMouseY = null;

function addHandler(object, event, handler) 
{
	// object ‚Äî —ç–ª–µ–º–µ–Ω—Ç –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
	// event ‚Äî —Å–æ–±—ã—Ç–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
	// handler ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
	if (object.addEventListener) 
	{
		object.addEventListener(event, handler, false);
	}
	else if (object.attachEvent) 
	{
		object.attachEvent('on' + event, handler);
	}
	else alert("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è");
}

function rotate()
{
	elem = document.getElementById('canvas_draw'); // –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç canvas_draw 
	elem.style.position = "relative";
	elem.style.border = "1px solid";
	ctx = elem.getContext("2d"); // –ø–æ–ª—É—á–∞–µ–º 2D-–∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
	
	ctx.font = "italic 10pt Arial";
	ctx.fillStyle = '#0000ff';	

	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ dat.GUI.
    controller = new function() 
	{
		this.teta = teta / DEGREE;
    }();
	
	// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç dat.GUI —Å –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ—Ç canvas.
	// –í dat.GUI –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏, —É–≥–ª—ã –ø–æ–≤–æ—Ä–æ—Ç–∞ –º–æ–¥–µ–ª–∏ –∏ —Ç.–¥.
	gui = new dat.GUI({ autoPlace: false });
	gui.domElement.id = 'gui';
	gui_container.appendChild(gui.domElement);
	
	var f1 = gui.addFolder('Angle Œ∏ (¬∞)');
	f1.add( controller, 'teta', 0.0, 720 ).onChange( function() 
	{
		teta = (controller.teta)* DEGREE;
		draw();
	});
	f1.open();
	
	//////////////////////////////////////////////////////////////////////						
	// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º—ã—à–∏
	elem.onmousedown = handleMouseDown;
	document.onmouseup = handleMouseUp;
	elem.onmousemove = handleMouseMove;

	
	// –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–ª–µ—Å–∞ –º—ã—à–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é wheel
//		addHandler(window, 'DOMMouseScroll', wheel);
//		addHandler(window, 'mousewheel', wheel);
//		addHandler(document, 'mousewheel', wheel);	

	addHandler(elem, 'DOMMouseScroll', wheel);
	addHandler(elem, 'mousewheel', wheel);
	addHandler(elem, 'mousewheel', wheel);	
	
	draw();
}

function draw()
{
	// –æ—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–≤–∞—Å–∞ –æ—Ç —Ä–∞–Ω–µ–µ –Ω–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –Ω–∞ –Ω–µ–≥–æ –ª–∏–Ω–∏–π, –æ—Ç—Ä–µ–∑–∫–æ–≤, —Ç–µ–∫—Å—Ç–æ–≤ –∏ —Ç.–ø.
	ctx.clearRect(0, 0, 620, 400);	// 770 x 400 - —Ä–∞–∑–º–µ—Ä—ã —Ö–æ–ª—Å—Ç–∞
	
	// –†–∏—Å—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω—ã–µ –æ—Å–∏ —á–µ—Ä–Ω—ã–º —Ü–≤–µ—Ç–æ–º –∏ —Ç–æ–ª—â–∏–Ω–æ–π 1 –ø–∏–∫—Å–µ–ª—å
	// —Å —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ –æ—Å—è–º (WG) —Ä–∞–≤–Ω—ã–º 20 (–∏ –≤–ª–µ–≤–æ/–≤–Ω–∏–∑ –∏ –≤–ø—Ä–∞–≤–æ/–≤–≤–µ—Ä—Ö)
	axes(ctx, 20, 20, 1.0, "Black");
	

	///////////////////////////////////////////////

	// –õ–µ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
	var point = new Point2D(100, 375);
	text1(ctx, "Physical space", point, "rt", "up", "B", "bold 16px Courier New");
	point = new Point2D(40, 355);
	text1(ctx, '"Up" and "Down" 180¬∞ apart', point, "rt", "up", "B", "bold 16px Courier New");
	
	// –¶–µ–Ω—Ç—Ä –ª–µ–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	var point_center = new Point2D(150, 230);
	csp(ctx, point_center, 6, "B");
	// –õ–µ–≤–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å
	point = new Point2D(150, 230);
	drawEllipse2(ctx, point, 100, 100, 1, "B");

	// –í–µ—Ä—Ö–Ω—è—è –∏ –Ω–∏–∂–Ω—è—è —Ç–æ—á–∫–∏ –Ω–∞ –ª–µ–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	point = new Point2D(150, 330);		
	csp(ctx, point, 6, "B");
	point = new Point2D(150, 130);		
	csp(ctx, point, 6, "B");

	// –û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è "|ü†ï‚å™" –∏ "|ü†ó‚å™"
	point = new Point2D(150, 335);
	text1(ctx, "Up", point, "mid", "up", "B", "bold 16px Courier New");
	
	point = new Point2D(150, 120);
	text1(ctx, "Down", point, "mid", "dn", "B", "bold 16px Courier New");
	
	// –†–∏—Å—É–µ–º —É–≥–ª—ã –Ω–∞ –ª–µ–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	var x = 100 * Math.sin(teta) + 150;
	var y = 100 * Math.cos(teta) + 230;
	point = new Point2D(x, y);
	csp(ctx, point, 5, "B");
	segment_arrow(ctx, point_center, point, 2, 0.4, "B")
	
	var temp_angle = 0;
	point = new Point2D(150, 230);
	if (teta < 2*PI)
	{
		// –ø–µ—Ä–≤—ã–π –æ–±–æ—Ä–æ—Ç
		draw_angle_2(ctx, point, PI/2, (-teta + PI/2), 100, 4, "B");
	}
	else
	{
		// –≤—Ç–æ—Ä–æ–π –æ–±–æ—Ä–æ—Ç
		drawEllipse(ctx, 150, 230, 100, 100, 4, "B");
		temp_angle = teta - 2*PI;
		draw_angle_2(ctx, point, PI/2, (-temp_angle + PI/2), 105, 4, '#8800ff')
	}
	
	// –ü—Ä–∞–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
	point = new Point2D(360, 375);
	text1(ctx, "Mathematical (spinor) space", point, "rt", "up", "R", "bold 16px Ariel");
	point = new Point2D(335, 355);
	text1(ctx, '"Up" and "Down" 90¬∞ apart', point, "rt", "up", "R", "bold 16px Courier New");
	
	// –¶–µ–Ω—Ç—Ä –ø—Ä–∞–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	var point_center = new Point2D(450, 230);
	csp(ctx, point_center, 6, "R");
	// –ü—Ä–∞–≤–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å
	point = new Point2D(450, 230);
	drawEllipse2(ctx, point, 100, 100, 1, "R");
	
	// –û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è "|ü†ï‚å™", "|ü†ó‚å™", "-|ü†ï‚å™" –∏ "-|ü†ó‚å™"
	point = new Point2D(450, 335);
	text1(ctx, "Up", point, "mid", "up", "R", "bold 16px Courier New");
	
	point = new Point2D(550, 230);
	text1(ctx, "Down", point, "rt", "mid", "R", "bold 16px Courier New");	
	
	point = new Point2D(450, 120);
	text1(ctx, "-Up", point, "mid", "dn", "R", "bold 16px Courier New")
	
	point = new Point2D(350, 230);
	text1(ctx, "-Down", point, "lt", "mid", "R", "bold 16px Courier New");	
	
	// –¢–æ—á–∫–∏ –Ω–∞ –ø—Ä–∞–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	point = new Point2D(450, 330);		
	csp(ctx, point, 6, "R");
	point = new Point2D(450, 130);		
	csp(ctx, point, 6, "R");
	
	point = new Point2D(550, 230);		
	csp(ctx, point, 6, "R");
	point = new Point2D(350, 230);		
	csp(ctx, point, 6, "R");
	
	// –†–∏—Å—É–µ–º —É–≥–ª—ã –Ω–∞ –ø—Ä–∞–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
	x = 100 * Math.sin(teta/2) + 450;
	y = 100 * Math.cos(teta/2) + 230;
	point = new Point2D(x, y);
	csp(ctx, point, 5, "R");
	segment_arrow(ctx, point_center, point, 2, 0.4, "R");
	
	point = new Point2D(450, 230);
	draw_angle_2(ctx, point, +PI/2, -teta/2 + PI/2, 100, 4, "R");
	
	
	//////////////////////////////////////////////////////////////
	var text_ang_teta = roundNumber(teta/DEGREE, 0) + "¬∞";
	text_ang_teta = "Œ∏ = " + text_ang_teta;
	point = new Point2D(100, 50);
	text1(ctx, text_ang_teta, point, "rt", "mid", "B", "italic bold 30px Courier New");
	
	text_ang_teta = roundNumber((teta/2)/DEGREE, 0) + "¬∞";
	text_ang_teta = "Œ∏/2 = " + text_ang_teta;
	point = new Point2D(370, 50);
	text1(ctx, text_ang_teta, point, "rt", "mid", "R", "italic bold 30px Courier New");

//	point = new Point2D(100, 10);
//	text1(ctx, "1/‚àö2", point, "rt", "mid", "Black", "12px monospace");
}

document.addEventListener('keydown', function(event)
{
	var code = event.keyCode;
	
	//  –ü–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ö–æ–ª—Å—Ç—É
	if (code == 37) 
	{   // left - –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ –≤–ª–µ–≤–æ
		xC = xC - 5; draw();
	}
	if (code == 38) 
	{   // up - –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ –≤–≤–µ—Ä—Ö     
		yC = yC - 5; draw();
	}
	if (code == 39) 
	{   // right - –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ –≤–ø—Ä–∞–≤–æ
	  xC = xC + 5; draw()
	}
	if (code == 40) 
	{   // down - –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ –≤–Ω–∏–∑
	  yC = yC + 5; draw();
	}
	
	// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
	if (code == 188) // <
	{
		SCALE = SCALE - 5; draw();
	}
	if (code == 190) // >
	{
		SCALE = SCALE + 5; draw();
	}
});

document.addEventListener('keyup', function(event) 
{
	var code = event.keyCode;
});
  
function handleMouseDown(event) 
{
	mouseDown = true;
	lastMouseX = event.clientX;
	lastMouseY = event.clientY;
}

function handleMouseUp(event) {
	mouseDown = false;
}	  
  
// –ü—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º—ã—à–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç WebGeometry 
// –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫—É—Ä—Å–æ—Ä—É –º—ã—à–∏ (–≤ –ø—Ä–∞–≤–æ–π –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Ö–æ–ª—Å—Ç–∞).
function handleMouseMove(event) 
{
	if (mouseDown) 
	{
		// –µ—Å–ª–∏ –∫–ª–∞–≤–∏—à–∞ –º—ã—à–∏ –Ω–∞–∂–∞—Ç–∞ —Ç–æ –¥–≤–∏–≥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
		var newX = event.clientX;
		var newY = event.clientY;
		
		var d = 7.0; 

		var deltaX = newX - lastMouseX;
		if (deltaX < 0)
		{
			xC = xC - d;
		}
		if (deltaX > 0)
		{
			xC = xC + d;
		}
		
		var deltaY = newY - lastMouseY;
		if (deltaY < 0)
		{
			yC = yC - d;
		}
		if (deltaY > 0)
		{
			yC = yC + d;
		}

		lastMouseX = newX
		lastMouseY = newY;
		draw();		
	}
	else
	{
		// –µ—Å–ª–∏ –∫–ª–∞–≤–∏—à–∞ –º—ã—à–∏ –ù–ï –Ω–∞–∂–∞—Ç–∞ —Ç–æ –≤—ã–≤–æ–¥–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (WG) —Ç–æ—á–∫–∏ 
		// –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫—É—Ä—Å–æ—Ä –º—ã—à–∏
		event.preventDefault();
		elem = document.getElementById('canvas_draw');
		coords = elem.getBoundingClientRect();	

		// –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—ã—à–∏ 	
		var x_mouse, y_mouse;

		// –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—ã—à–∏ –Ω–∞ —Ö–æ–ª—Å—Ç–µ (canvas_draw)
		x_mouse = event.clientX - coords.left;
		y_mouse = event.clientY - coords.top;	

		// –ø—Ä–∏–≤–æ–¥–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—ã—à–∏ –∫ WebGeometry (WG)
		x_coord = (x_mouse - xC)/SCALE;
		y_coord = (yC - y_mouse)/SCALE;

		draw();
	}
}

// –ü—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏ –∫–æ–ª–µ—Å–∏–∫–∞ –º—ã—à–∏ –º–µ–Ω—è–µ—Ç—Å—è –º–∞—Å—à—Ç–∞–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
function wheel(event) 
{
	if (event.preventDefault) 
		event.preventDefault();
	event.returnValue = false;
	
	var delta; // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–≤–æ—Ä–æ—Ç–∞ –∫–æ–ª—ë—Å–∏–∫–∞ –º—ã—à–∏
	event = event || window.event;
	// Opera –∏ IE —Ä–∞–±–æ—Ç–∞—é—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º wheelDelta
	if (event.wheelDelta) 
	{ // –í Opera –∏ IE
		delta = event.wheelDelta / 10000;
		// –í –û–ø–µ—Ä–µ –∑–Ω–∞—á–µ–Ω–∏–µ wheelDelta —Ç–∞–∫–æ–µ –∂–µ, –Ω–æ —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –∑–Ω–∞–∫–æ–º
		if (window.opera) 
			delta = -delta; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è Opera
	}
	else if (event.detail) 
	{ // –î–ª—è Gecko
		delta = -event.detail / 3;
	}
	
	SCALE = SCALE + 5 * delta; // –º–µ–Ω—è–µ–º –º–∞—Å—à—Ç–∞–±
	draw(); // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
}

function roundNumber(num, places) 
{
	return ( Math.round(num * Math.pow(10, places)) / Math.pow(10, places) );
}

// –≠—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç –≤ —Ñ–∞–π–ª–µ canvas2D.js
function draw_angle_2(ctx, point, ang_b, ang_e, radius, width, color)
{
	ctx.save();
	
	if (color == "R")
		ctx.strokeStyle = '#f00';
	else if (color == "G")
		ctx.strokeStyle = '#0f0';
	else if (color == "B")
		ctx.strokeStyle = '#00f';		
	
	else if (color == "Brown") 
		ctx.strokeStyle = '#A52A2A';	
	else if (color == "DarkOrchid") 
		ctx.strokeStyle = '#9932CC';
	else if (color == "Gray") 
		ctx.strokeStyle = '#808080';
	else if (color == "Black") 
		ctx.strokeStyle = '#000';	
	else
		ctx.strokeStyle = color;

	ctx.beginPath();
	ctx.arc(fx(point[0]), fy(point[1]), radius*SCALE, -ang_b, -ang_e, false);
	ctx.lineWidth = width;
	ctx.stroke();
	
	ctx.restore();	
}

// *********************************************************************
// –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç–ª–ª–∏–ø—Å —Å —Ü–µ–Ω—Ç—Ä–æ–º –≤ —Ç–æ—á–∫–µ point
// a –∏ b - —Ä–∞–∑–º–µ—Ä—ã –ø–æ–ª—É–æ—Å–µ–π —ç–ª–ª–∏–ø—Å–∞
function drawEllipse2(ctx, point, a, b, width, color)
{
	ctx.save();
	
	// –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (C–ö) –∏ –º–∞—Å—à—Ç–∞–±
	if (color == "R")
		ctx.strokeStyle = '#f00';
	else if (color == "G")
		ctx.strokeStyle = '#0f0';
	else if (color == "B")
		ctx.strokeStyle = '#00f';		
	
	else if (color == "Brown") 
		ctx.strokeStyle = '#A52A2A';
	else if (color == "DarkOrchid") 
		ctx.strokeStyle = '#9932CC';
	else if (color == "Gray") 
		ctx.strokeStyle = '#808080';
	else if (color == "Black") 
		ctx.strokeStyle = '#000';	
	else if (color == "Maroon")
		ctx.strokeStyle = '#800000';
	else if (color == "Purple")
		ctx.strokeStyle = '#800080';
	else
		ctx.strokeStyle = color;	
	
	ctx.lineWidth = width;
	
	ctx.beginPath();

	// –ü–µ—Ä–µ–Ω–æ—Å–∏–º –°–ö –≤ —Ü–µ–Ω—Ç—Ä –±—É–¥—É—â–µ–≥–æ —ç–ª–ª–∏–ø—Å–∞
	ctx.translate(fx(point[0]), fy(point[1]));

	/*
	* –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –ø–æ —Ö.
	* –¢–µ–ø–µ—Ä—å –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å –≤—ã—Ç—è–Ω–µ—Ç—Å—è –≤ a / b —Ä–∞–∑
	* –∏ —Å—Ç–∞–Ω–µ—Ç —ç–ª–ª–∏–ø—Å–æ–º
	*/

	ctx.scale(a / b, 1);

	// –†–∏—Å—É–µ–º –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –±–ª–∞–≥–æ–¥–∞—Ä—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—é —Å—Ç–∞–Ω–µ—Ç —ç–ª–ª–∏–ø—Å–æ–º
	ctx.arc(0, 0, b*SCALE, 0, Math.PI * 2, true);

	ctx.closePath();
	ctx.stroke();
	// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –°–ö –∏ –º–∞—Å—à—Ç–∞–±
	ctx.restore();
}			
